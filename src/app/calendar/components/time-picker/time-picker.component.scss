@import '../../../global.scss';

/// Mixin to put items on a circle
/// [1] - Allows children to be absolutely positioned
/// [2] - Allows the mixin to be used on a list
/// [3] - In case box-sizing: border-box has been enabled
/// [4] - Allows any type of direct children to be targeted
///
/// @param {Integer} $nb-items - Number or items
/// @param {Length} $circle-size - Container size
/// @param {Length} $item-size - Item size
/// @param {String | false} $class-for-IE - Base class name for old IE
@mixin time-picker--clock-item(
  $item-length,
  $circle-size,
  $item-size,
  $translate,
  $class-for-IE: false
) {
  $half-item: ($item-size / 2);
  $half-parent: ($circle-size / 2);

  position: relative; /* 1 */
  width: $circle-size;
  height: $circle-size;
  padding: 0;
  border-radius: 50%;
  list-style: none; /* 2 */
  box-sizing: content-box; /* 3 */

  > * {
    /* 4 */
    // display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    width: $item-size;
    height: $item-size;
    margin: -$half-item;
  }

  $angle: (360 / $item-length);
  $rot: 0;

  @for $i from 1 through $item-length {
    @if not $class-for-IE {
      > :nth-of-type(#{$i}) {
        transform: rotate($rot * 1deg - 90deg)
          translate($half-parent - $translate)
          rotate($rot * -1deg + 90deg);
      }
    } @else {
      > .#{$class-for-IE}#{$i} {
        // If CSS transforms are not supported
        $mt: sin($rot * pi() / 180) * $half-parent - $half-item;
        $ml: cos($rot * pi() / 180) * $half-parent - $half-item;
        margin: $mt 0 0 $ml;
      }
    }

    $rot: ($rot + $angle);
  }
}

.time-picker {
  height: 272px;
  &--clock {
    &-active {
      background-color: white;
      color: $color-primary;
    }
    &-inner {
      @include time-picker--clock-item(12, 224px, 24px, 48px, false);
      background-color: $color-primary;
      color: white;
      font-size: 14px;
      position: absolute;
      &--item {
        align-items: center;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        z-index: 2;
        @include transition(background, 0.25s, ease-in-out);
        @include transition(color, 0.25s, ease-in-out);
        &:hover {
          cursor: pointer;
          background-color: white;
          color: $color-primary;
        }
      }
    }
    &-outer {
      @include time-picker--clock-item(12, 224px, 28px, 20px, false);
      background-color: $color-primary;
      color: white;
      position: absolute;
      &--item {
        align-items: center;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        z-index: 2;
        @include transition(background, 0.25s, ease-in-out);
        @include transition(color, 0.25s, ease-in-out);
        &:hover {
          cursor: pointer;
          background-color: white;
          color: $color-primary;
        }
      }
    }
  }
}
